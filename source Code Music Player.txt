//open-source 
// Music Player Code
//The Scrappers Team


import java.awt.Color;
import java.awt.Cursor;
import static java.awt.Desktop.getDesktop;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.net.URI;
import java.net.URL;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import static javax.swing.JFrame.setDefaultLookAndFeelDecorated;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.Timer;
import javax.swing.UIManager;

import javafx.scene.media.*;
import javafx.util.Duration;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Twisted Metal
 */
public class Music_Player extends javax.swing.JFrame {
 
    ActionListener action=new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if(c.isRunning()==false ){
        ++Increment;
        list_combobox.setSelectedIndex(Increment);             
            }
        }
    };
                      Timer  timer= new Timer(1000,action);

static String SoundMod="files/Sound Effects/Click-SoundBible.com-1387633738.wav";
    ImageIcon image=new ImageIcon(getClass().getResource("/files/Icons/Devices-media-optical-audio-icon.png"));
    static String command="ffplay ";
    static String Incrementer="/home/twisted/BTJD Music Player Files/Music Playlist/music";
    static String Extension=".wav";
    static int Increment=0; 
    static   Clip clip,c;
     static Clip filedClip;
            ImageIcon image44=new ImageIcon(getClass().getResource("/files/Icons/sheet-music-song-lyrics-headphones-music-ss-1920.jpg"));
    



   
    /**
     * Creates new form Music_Player
     */
    public Music_Player() {
        initComponents();
        getContentPane().setBackground(Color.BLACK);
           about.setVisible(false);
           Equalizer.setVisible(false);

        setIconImage(image.getImage());
  comboboxList();
  timeLAF.start();
       
    }
ActionListener listen=new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent e){
                   setDefaultLookAndFeelDecorated(false);
                   timeLAF.stop();
        }
        };
Timer timeLAF=new Timer(10,listen);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        about_btn = new javax.swing.JButton();
        Equalizer = new javax.swing.JPanel();
        extremeBass = new javax.swing.JSlider();
        deepBass = new javax.swing.JSlider();
        bassBoosted = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        toggle = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        AerialBass = new javax.swing.JSlider();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        electronBass = new javax.swing.JSlider();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        background4 = new javax.swing.JLabel();
        about = new javax.swing.JPanel();
        TeamLogo = new javax.swing.JLabel();
        facebook = new javax.swing.JLabel();
        facebook.setVisible(false);
        version_txtview = new javax.swing.JLabel();
        googleplus = new javax.swing.JLabel();
        googleplus.setVisible(false);
        source_code = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        BetaTeam_Members = new javax.swing.JTextArea();
        twitter = new javax.swing.JLabel();
        twitter.setVisible(false);
        openSocials = new javax.swing.JLabel();
        GitHub = new javax.swing.JLabel();
        GitHub.setVisible(false);

        jLabel25 = new javax.swing.JLabel();
        program = new javax.swing.JPanel();
        previous_btn = new javax.swing.JButton();
        list_combobox = new javax.swing.JComboBox<>();
        next_btn = new javax.swing.JButton();
        play_pause_btn = new javax.swing.JButton();
        repeat_btn = new javax.swing.JButton();
        lyrics_btn = new javax.swing.JButton();
        musicTitle_txtField = new javax.swing.JTextField();
        fastForward_btn = new javax.swing.JButton();
        shuffle_btn = new javax.swing.JButton();
        fastBackward_btn = new javax.swing.JButton();
        icon_ico = new javax.swing.JLabel();
        filechooser = new javax.swing.JLabel();
        addlyrics = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BTJD Music Player");
        setLocation(new java.awt.Point(300, 90));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windows(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        about_btn.setBackground(new java.awt.Color(0, 0, 0));
        about_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/arrow up.png"))); // NOI18N
        about_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                about_btnActionPerformed(evt);
            }
        });
        getContentPane().add(about_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 443, 100, 20));

        Equalizer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        extremeBass.setOrientation(javax.swing.JSlider.VERTICAL);
        extremeBass.setEnabled(false);
        extremeBass.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                extremeBassStateChanged(evt);
            }
        });
        Equalizer.add(extremeBass, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 150, -1, 165));

        deepBass.setOrientation(javax.swing.JSlider.VERTICAL);
        deepBass.setEnabled(false);
        deepBass.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                deepBassStateChanged(evt);
            }
        });
        deepBass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deepBassMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deepBassMouseEntered(evt);
            }
        });
        Equalizer.add(deepBass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, -1, 165));

        bassBoosted.setOrientation(javax.swing.JSlider.VERTICAL);
        bassBoosted.setEnabled(false);
        bassBoosted.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bassBoostedStateChanged(evt);
            }
        });
        Equalizer.add(bassBoosted, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 150, -1, 165));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Deep Bass");
        Equalizer.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Extreme Sounded");
        Equalizer.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Bass Boosted");
        Equalizer.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, -1, -1));

        toggle.setMajorTickSpacing(100);
        toggle.setToolTipText("Switch !");
        toggle.setValue(0);
        toggle.setEnabled(false);
        toggle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toggleStateChanged(evt);
            }
        });
        toggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                toggleMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toggleMouseClicked(evt);
            }
        });
        Equalizer.add(toggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 377, 58, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("OFF");
        Equalizer.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 399, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ON");
        Equalizer.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 399, -1, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("100 %");
        Equalizer.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("0%");
        Equalizer.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, -1));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("50%");
        Equalizer.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, -1, 20));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("100 %");
        Equalizer.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, -1, -1));

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("50%");
        Equalizer.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 230, -1, -1));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("0%");
        Equalizer.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, -1, -1));

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("50%");
        Equalizer.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 230, -1, -1));

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("0%");
        Equalizer.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 300, -1, -1));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("100 %");
        Equalizer.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, -1, -1));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/back-icon.png"))); // NOI18N
        back.setToolTipText("Back To the Program !");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        Equalizer.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, 66, 75));

        AerialBass.setOrientation(javax.swing.JSlider.VERTICAL);
        AerialBass.setEnabled(false);
        AerialBass.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AerialBassStateChanged(evt);
            }
        });
        AerialBass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AerialBassMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AerialBassMouseEntered(evt);
            }
        });
        Equalizer.add(AerialBass, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, -1, 165));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("0%");
        Equalizer.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, -1, -1));

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("50%");
        Equalizer.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, -1, -1));

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("100 %");
        Equalizer.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, -1, -1));

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Aerial Bass");
        Equalizer.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, -1));

        electronBass.setOrientation(javax.swing.JSlider.VERTICAL);
        electronBass.setEnabled(false);
        electronBass.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                electronBassStateChanged(evt);
            }
        });
        electronBass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                electronBassMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                electronBassMouseEntered(evt);
            }
        });
        Equalizer.add(electronBass, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 150, -1, 165));

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("0%");
        Equalizer.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 300, -1, -1));

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("50%");
        Equalizer.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 230, -1, -1));

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("100 %");
        Equalizer.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, -1, -1));

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Electron Bass");
        Equalizer.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 130, -1, -1));

        background4.setForeground(new java.awt.Color(255, 255, 255));
        background4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/audio-device-disc-jockey-1772.jpg"))); // NOI18N
        Equalizer.add(background4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(Equalizer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 440));

        about.setBackground(new java.awt.Color(51, 51, 51));
        about.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102), java.awt.Color.darkGray, java.awt.Color.lightGray));
        about.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TeamLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Picture2.png"))); // NOI18N
        TeamLogo.setToolTipText("Logo By Fady Nashaat !");
        about.add(TeamLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 210, 150));

        facebook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/facebook.png"))); // NOI18N
        facebook.setToolTipText("Developer's Facebook");
        facebook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                facebookMouseClicked(evt);
            }
        });
        about.add(facebook, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 200, 60, 50));

        version_txtview.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        version_txtview.setForeground(new java.awt.Color(255, 255, 255));
        version_txtview.setText("Alpha Version 5.0.1");
        about.add(version_txtview, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 390, 140, 40));

        googleplus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/google-plus-icon.png"))); // NOI18N
        googleplus.setToolTipText("Developer's G-mail");
        googleplus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                googleplusMouseClicked(evt);
            }
        });
        about.add(googleplus, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 250, 50, 60));

        source_code.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/source.png"))); // NOI18N
        source_code.setToolTipText("Source Code ! :-))");
        source_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                source_codeActionPerformed(evt);
            }
        });
        about.add(source_code, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 220, 40, 50));

        BetaTeam_Members.setEditable(false);
        BetaTeam_Members.setColumns(20);
        BetaTeam_Members.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        BetaTeam_Members.setRows(5);
        BetaTeam_Members.setText("Coded in Java By:-\n Pavly Gerges(Java Developer & Computer professional).\n\nBy Beta Team:-\n Fady Nashaat(C# Developer & Graphics Designer).\n Thomas Micheal(Web Developer & python Coder).");
        jScrollPane1.setViewportView(BetaTeam_Members);

        about.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 610, 180));

        twitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/twitter-icon.png"))); // NOI18N
        twitter.setToolTipText("Developer's Twitter");
        twitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                twitterMouseClicked(evt);
            }
        });
        about.add(twitter, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 310, 50, 50));

        openSocials.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Button-Green-Arrow-Up-icon.png"))); // NOI18N
        openSocials.setToolTipText("Communications");
        openSocials.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openSocialsMouseClicked(evt);
            }
        });
        about.add(openSocials, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 360, 70, -1));

        GitHub.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Github-icon.png"))); // NOI18N
        GitHub.setToolTipText("GitHub Team Repository");
        GitHub.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GitHubMouseClicked(evt);
            }
        });
        about.add(GitHub, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, 50, 50));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Wallpapers/technology-music-sound-things.png"))); // NOI18N
        jLabel25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel25KeyPressed(evt);
            }
        });
        about.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 440));

        getContentPane().add(about, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 440));

        program.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                programKeyPressed(evt);
            }
        });
        program.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        previous_btn.setBackground(new java.awt.Color(51, 51, 51));
        previous_btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        previous_btn.setForeground(new java.awt.Color(204, 204, 204));
        previous_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Actions-arrow-left-icon.png"))); // NOI18N
        previous_btn.setText("Previous");
        previous_btn.setToolTipText("Previous");
        previous_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previous_btnActionPerformed(evt);
            }
        });
        program.add(previous_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, 130, 70));

        list_combobox.setBackground(new java.awt.Color(255, 204, 255));
        list_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*Press To List Down !" }));
        list_combobox.setToolTipText("Select Your Fav.!");
        list_combobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                list_comboboxItemStateChanged(evt);
            }
        });
        list_combobox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                list_comboboxMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_comboboxMouseClicked(evt);
            }
        });
        list_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_comboboxActionPerformed(evt);
            }
        });
        program.add(list_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 580, 70));

        next_btn.setBackground(new java.awt.Color(51, 51, 51));
        next_btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        next_btn.setForeground(new java.awt.Color(204, 204, 204));
        next_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Actions-arrow-right-icon.png"))); // NOI18N
        next_btn.setText("Next");
        next_btn.setToolTipText("Next");
        next_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_btnActionPerformed(evt);
            }
        });
        program.add(next_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 340, 120, 70));

        play_pause_btn.setBackground(new java.awt.Color(51, 51, 51));
        play_pause_btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        play_pause_btn.setForeground(new java.awt.Color(204, 204, 204));
        play_pause_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/play-icon.png"))); // NOI18N
        play_pause_btn.setText("Pause");
        play_pause_btn.setToolTipText("Pause");
        play_pause_btn.setEnabled(false);
        play_pause_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_pause_btnActionPerformed(evt);
            }
        });
        program.add(play_pause_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, 120, 70));

        repeat_btn.setBackground(new java.awt.Color(0, 153, 255));
        repeat_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Media-Controls-Repeat-icon.png"))); // NOI18N
        repeat_btn.setToolTipText("Repeat");
        repeat_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                repeat_btnMouseClicked(evt);
            }
        });
        repeat_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeat_btnActionPerformed(evt);
            }
        });
        program.add(repeat_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 290, 60, 40));

        lyrics_btn.setBackground(new java.awt.Color(0, 153, 255));
        lyrics_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Actions-view-media-lyrics-icon.png"))); // NOI18N
        lyrics_btn.setText(" Lyrics");
        lyrics_btn.setToolTipText("Open Lyrics");
        lyrics_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lyrics_btnActionPerformed(evt);
            }
        });
        program.add(lyrics_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 283, 120, 40));

        musicTitle_txtField.setEditable(false);
        musicTitle_txtField.setBackground(new java.awt.Color(0, 0, 0));
        musicTitle_txtField.setForeground(new java.awt.Color(204, 204, 204));
        musicTitle_txtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musicTitle_txtFieldActionPerformed(evt);
            }
        });
        program.add(musicTitle_txtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 320, -1));

        fastForward_btn.setBackground(new java.awt.Color(51, 51, 51));
        fastForward_btn.setForeground(new java.awt.Color(204, 204, 204));
        fastForward_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/fast-forward-icon.png"))); // NOI18N
        fastForward_btn.setToolTipText("Fast Forward");
        fastForward_btn.setPreferredSize(new java.awt.Dimension(115, 41));
        fastForward_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastForward_btnActionPerformed(evt);
            }
        });
        program.add(fastForward_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 20, 20));

        shuffle_btn.setBackground(new java.awt.Color(0, 153, 255));
        shuffle_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Media-Controls-Shuffle-icon.png"))); // NOI18N
        shuffle_btn.setToolTipText("Shuffle");
        shuffle_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shuffle_btnMouseClicked(evt);
            }
        });
        shuffle_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shuffle_btnActionPerformed(evt);
            }
        });
        program.add(shuffle_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 60, 40));

        fastBackward_btn.setBackground(new java.awt.Color(51, 51, 51));
        fastBackward_btn.setForeground(new java.awt.Color(204, 204, 204));
        fastBackward_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Fast-backward-icon.png"))); // NOI18N
        fastBackward_btn.setToolTipText("Fast Backward");
        fastBackward_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastBackward_btnActionPerformed(evt);
            }
        });
        program.add(fastBackward_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 20, 20));

        icon_ico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/Devices-media-optical-audio-icon.png"))); // NOI18N
        icon_ico.setToolTipText("Under Development !");
        icon_ico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                icon_icoMouseClicked(evt);
            }
        });
        program.add(icon_ico, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, -1, -1));

        filechooser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/My-Documents-icon.png"))); // NOI18N
        filechooser.setToolTipText("Choose a wav file from the File System");
        filechooser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filechooserMouseClicked(evt);
            }
        });
        program.add(filechooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 50, 40));

        addlyrics.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Icons/File-New-icon.png"))); // NOI18N
        addlyrics.setToolTipText("Add Lyrics !");
        addlyrics.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addlyricsMouseClicked(evt);
            }
        });
        program.add(addlyrics, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, -1, -1));

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/Wallpapers/technology-music-sound-things.png"))); // NOI18N
        jLabel24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel24KeyPressed(evt);
            }
        });
        program.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(program, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 460));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void previous_btnActionPerformed(java.awt.event.ActionEvent evt) {                                             
try{
        WelcomeMod(getClass().getResource(SoundMod));
          c.close();
     
        --Increment;
        Clipper(Incrementer+Increment+Extension);
                c.close();

           list_combobox.setSelectedIndex(Increment);

}catch(Exception e){
    
}
    }                                            

    private void play_pause_btnActionPerformed(java.awt.event.ActionEvent evt) {                                               
//for FileChooser clips
        try{
             WelcomeMod(getClass().getResource(SoundMod));
       DefaultConfiguration();

timer.stop();
if (filedClip.isActive()==true){
          ImageIcon icon1=new ImageIcon(getClass().getResource("/files/Icons/pause-icon.png"));
          try{ 
          filedClip.stop();
          }catch(Exception e){}
          play_pause_btn.setText("Play");
          play_pause_btn.setToolTipText("Play");
          play_pause_btn.setIcon(icon1);
      } else if (filedClip.isActive()==false){

           ImageIcon icon2=new ImageIcon(getClass().getResource("/files/Icons/play-icon.png"));
                     play_pause_btn.setToolTipText("Pause");

      play_pause_btn.setText("Pause");
          play_pause_btn.setIcon(icon2);

    
filedClip.getMicrosecondPosition();
filedClip.start(); 
            
            
            
      } }catch(Exception e){
            
        }
        
        
        //for reputted clips
        try{
        WelcomeMod(getClass().getResource(SoundMod));
       DefaultConfiguration();

timer.stop();
if (c.isActive()==true){
          ImageIcon icon1=new ImageIcon(getClass().getResource("/files/Icons/pause-icon.png"));
          try{ 
          c.stop();
          }catch(Exception e){}
          play_pause_btn.setText("Play");
          play_pause_btn.setToolTipText("Play");
          play_pause_btn.setIcon(icon1);
      } else if (c.isActive()==false){

           ImageIcon icon2=new ImageIcon(getClass().getResource("/files/Icons/play-icon.png"));
                     play_pause_btn.setToolTipText("Pause");

      play_pause_btn.setText("Pause");
          play_pause_btn.setIcon(icon2);

    
c.getMicrosecondPosition();
c.start(); 
      }
      }catch(Exception error){
           
      }
    }                                              

    private void next_btnActionPerformed(java.awt.event.ActionEvent evt) {                                         
try{        
        WelcomeMod(getClass().getResource(SoundMod));
        c.close();
       
        ++Increment;
        Clipper(Incrementer+Increment+Extension);
        c.close();
     list_combobox.setSelectedIndex(Increment);
}catch(Exception e){
    
}
    }                                        

 
    private void shuffle_btnActionPerformed(java.awt.event.ActionEvent evt) {                                            
 try{
     
       WelcomeMod(getClass().getResource(SoundMod));
       shuffle_btn.setEnabled(false);
       if(list_combobox.getSelectedIndex()==0){
      Increment=1;
                   Clipper(Incrementer+Increment+Extension);

       }
//(int)c.getMicrosecondLength()/1500



timer.start();
list_combobox.setSelectedIndex(Increment);


   
   
    
        
}catch(Exception error){
    
}
    }                                           

    private void lyrics_btnActionPerformed(java.awt.event.ActionEvent evt) {                                           
        WelcomeMod(getClass().getResource(SoundMod));
        
        
        Readit();
        
        
        
        
    }                                          

    private void repeat_btnActionPerformed(java.awt.event.ActionEvent evt) {                                           
  
        try{
        WelcomeMod(getClass().getResource(SoundMod));
        timer.stop();
        shuffle_btn.setEnabled(false);
        filedClip.loop(3);
        
}catch(Exception e){
    
}     
        
        try{
        WelcomeMod(getClass().getResource(SoundMod));
        timer.stop();
        shuffle_btn.setEnabled(false);
        c.loop(3);
}catch(Exception e){
    
} 
    }                                          

    private void list_comboboxActionPerformed(java.awt.event.ActionEvent evt) {                                              
                                    

        WelcomeMod(getClass().getResource(SoundMod));
       
                   ImageIcon icon2=new ImageIcon(getClass().getResource("/files/Icons/play-icon.png"));
           play_pause_btn.setEnabled(true);
           
                               musicTitle_txtField.setText(text);
try{
    filedClip.close();
}catch(Exception e){
    
}

         
  
         try{
              if(c.isActive()==true){
                  c.loop(0);
                 c.close();
              } }catch(Exception e){
                      }
         
                  Increment = list_combobox.getSelectedIndex();
                             

                             Clipper(Incrementer+Increment+Extension);
                      switch(list_combobox.getSelectedIndex()){
                          case 0:
                              musicTitle_txtField.setText("Select A Song !");
                              break;
                      }
             

    }                                             

    private void shuffle_btnMouseClicked(java.awt.event.MouseEvent evt) {                                         



    }                                        

    private void repeat_btnMouseClicked(java.awt.event.MouseEvent evt) {                                        

    }                                       

    private void formKeyPressed(java.awt.event.KeyEvent evt) {                                
try{
        switch(evt.getKeyCode()){
    case KeyEvent.VK_F5:
           if(c.isRunning()){
               c.stop();
           }
           if(c.isRunning()==false){
               c.start();
           }
           break;
}
}catch(Exception error){
    
}


    }                               


    private void formKeyTyped(java.awt.event.KeyEvent evt) {                              


    }                             

    private void fastBackward_btnActionPerformed(java.awt.event.ActionEvent evt) {                                                 
try{
        WelcomeMod(getClass().getResource(SoundMod));
        filedClip.setMicrosecondPosition(filedClip.getMicrosecondPosition()-1000000);
       }catch(Exception e){
           
       }
        
        
        try{

        WelcomeMod(getClass().getResource(SoundMod));
        c.setMicrosecondPosition(c.getMicrosecondPosition()-1000000);
}catch(Exception e){
    
}
    }                                                

    private void fastForward_btnActionPerformed(java.awt.event.ActionEvent evt) {                                                
            try{
        WelcomeMod(getClass().getResource(SoundMod));
        filedClip.setMicrosecondPosition(filedClip.getMicrosecondPosition()+1000000);
       }catch(Exception e){
           
       }
        
        
        
        try{
        WelcomeMod(getClass().getResource(SoundMod));
        c.setMicrosecondPosition(c.getMicrosecondPosition()+1000000);
       }catch(Exception e){
           
       }
    }                                               

    private void musicTitle_txtFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

    private void list_comboboxMouseClicked(java.awt.event.MouseEvent evt) {                                           


    }                                          

    private void list_comboboxItemStateChanged(java.awt.event.ItemEvent evt) {                                               
  
    }                                              

    private void list_comboboxMousePressed(java.awt.event.MouseEvent evt) {                                           
       
    }                                          

    private void windows(java.awt.event.WindowEvent evt) {                         
        WelcomeMod(getClass().getResource(SoundMod));
       

        int question=JOptionPane.showConfirmDialog(null, "Are You Sure You wanna Quit ?","Choose !",JOptionPane.INFORMATION_MESSAGE);

        switch(question){

            case JOptionPane.YES_OPTION:
            WelcomeMod(getClass().getResource(SoundMod));

            System.exit(0);
            break;
           
            default:
                 WelcomeMod(getClass().getResource(SoundMod));
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
          
        }
    }                        

    private void about_btnActionPerformed(java.awt.event.ActionEvent evt) {                                          
        WelcomeMod(getClass().getResource(SoundMod));
        if(about.isVisible()==false){
    program.setVisible(false);
    Equalizer.setVisible(false);
    about.setVisible(true);
    about_btn.setIcon(new ImageIcon(getClass().getResource("/files/Icons/arrow down.png")));
}else if(about.isVisible()==true){
        program.setVisible(true);
    about.setVisible(false);
    Equalizer.setVisible(false);
        about_btn.setIcon(new ImageIcon(getClass().getResource("/files/Icons/arrow up.png")));


}
    

    }                                         

    private void facebookMouseClicked(java.awt.event.MouseEvent evt) {                                      
        try{
                    WelcomeMod(getClass().getResource(SoundMod));

            getDesktop().browse(new URI("https://www.facebook.com/profile.php?id=100010116038073"));
        }catch(Exception error){

        }
    }                                     

    private void googleplusMouseClicked(java.awt.event.MouseEvent evt) {                                        
        try{
                    WelcomeMod(getClass().getResource(SoundMod));

            getDesktop().browse(new URI("https://mail.google.com/mail/u/0/#inbox"));
        }catch(Exception error){

        }
    }                                       

    private void source_codeActionPerformed(java.awt.event.ActionEvent evt) {                                            
        WelcomeMod(getClass().getResource(SoundMod));

        JOptionPane.showMessageDialog(null, "@Beta Team : Thanks for using our developed OPEN-SOURCE Program"+"\n"
        + "We hope you have enjoyed our work,thanks in advance :-))", "Source Code By Beta Team !", JOptionPane.INFORMATION_MESSAGE, image);
 Source_Code(getClass().getResource("/files/Source Code/source.txt"));

    }                                           

    private void backMouseClicked(java.awt.event.MouseEvent evt) {                                  
           WelcomeMod(getClass().getResource(SoundMod));

        program.setVisible(true);
    Equalizer.setVisible(false);
    about.setVisible(false);

    }                                 

    private void toggleMouseClicked(java.awt.event.MouseEvent evt) {                                    
try{
        if(toggle.getValue()<100){
            WelcomeMod(getClass().getResource(SoundMod));

    toggle.setValue(100);
    deepBass.setEnabled(true);
    extremeBass.setEnabled(true);
    bassBoosted.setEnabled(true);
    AerialBass.setEnabled(true);
    electronBass.setEnabled(true);
   

    
    deepBass.setValue(50);
    extremeBass.setValue(50);
    bassBoosted.setValue(50);
    AerialBass.setValue(50);
    electronBass.setValue(50);
    
    EqualizerBass1("/home/twisted/BTJD Music Player Files/Bass Booster/deepbass.wav");
            EqualizerBass2("/home/twisted/BTJD Music Player Files/Bass Booster/extermeBass.wav");
    EqualizerBass3("/home/twisted/BTJD Music Player Files/Bass Booster/bassboosted.wav");
        EqualizerBass4("/home/twisted/BTJD Music Player Files/Bass Booster/aerialbass.wav");
    EqualizerBass5("/home/twisted/BTJD Music Player Files/Bass Booster/electronbass.wav");
    
     mediaPlayer1.setVolume(0.5);
    mediaPlayer2.setVolume(0.5);
    mediaPlayer3.setVolume(0.5);
        mediaPlayer4.setVolume(0.5);
    mediaPlayer5.setVolume(0.5);

     
}else if(toggle.getValue()>0){
            WelcomeMod(getClass().getResource(SoundMod));
        

    toggle.setValue(0);
     deepBass.setEnabled(false);
    extremeBass.setEnabled(false);
    bassBoosted.setEnabled(false);
    AerialBass.setEnabled(false);
    electronBass.setEnabled(false);
    
     deepBass.setValue(50);
    extremeBass.setValue(50);
    bassBoosted.setValue(50);
    AerialBass.setValue(50);
    electronBass.setValue(50);
    
    mediaPlayer1.stop();
        mediaPlayer2.stop();

            mediaPlayer3.stop();
                        mediaPlayer4.stop();
            mediaPlayer5.stop();


}
}catch(Exception e){
}
    }                                   

    private void toggleMousePressed(java.awt.event.MouseEvent evt) {                                    

    


    }                                   

    private void deepBassMouseClicked(java.awt.event.MouseEvent evt) {                                      




    }                                     

    private void deepBassMouseEntered(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void deepBassStateChanged(javax.swing.event.ChangeEvent evt) {                                      
try{
        if(deepBass.isEnabled()==true){
             
               double value=deepBass.getValue(); //10,20,30,40,50,60,70,80,100--volume=0.1~1.0---> mediaPlayer1=value/100;;;;
             
               mediaPlayer1.setVolume(value/100);
               
    
    
    
}else if(deepBass.isEnabled()==false){
    mediaPlayer1.stop();
}
}catch(Exception e){
    
}

    }                                     

    private void extremeBassStateChanged(javax.swing.event.ChangeEvent evt) {                                         
try{
        if(extremeBass.isEnabled()==true){
    
  double value=extremeBass.getValue(); //10,20,30,40,50,60,70,80,100--volume=0.1~1.0---> mediaPlayer1=value/100;;;;
             
               mediaPlayer2.setVolume(value/100);    
    
    
}else if(deepBass.isEnabled()==false){
    mediaPlayer2.stop();
    
}
}catch(Exception e){
    
}


    }                                        

    private void bassBoostedStateChanged(javax.swing.event.ChangeEvent evt) {                                         
try{
        if(bassBoosted.isEnabled()==true){
   
    
   double value=bassBoosted.getValue(); //10,20,30,40,50,60,70,80,100--volume=0.1~1.0---> mediaPlayer1=value/100;;;;
             
               mediaPlayer3.setVolume(value/100);
    
    
    
}else if(bassBoosted.isEnabled()==false){
    mediaPlayer3.stop();
    
}
}catch(Exception e){
    
}



    }                                        

    private void AerialBassStateChanged(javax.swing.event.ChangeEvent evt) {                                        
try{
        if(AerialBass.isEnabled()==true){
    
    
    double value=AerialBass.getValue(); //10,20,30,40,50,60,70,80,100--volume=0.1~1.0---> mediaPlayer1=value/100;;;;
             
               mediaPlayer4.setVolume(value/100);
    
    
    
}else if(AerialBass.isEnabled()==false){
    mediaPlayer4.stop();
    
}
}catch(Exception e){
    
}


    }                                       

    private void AerialBassMouseClicked(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void AerialBassMouseEntered(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void electronBassStateChanged(javax.swing.event.ChangeEvent evt) {                                          
try{
        if(electronBass.isEnabled()==true){
    
    
    double value=electronBass.getValue(); //10,20,30,40,50,60,70,80,100--volume=0.1~1.0---> mediaPlayer1=value/100;;;;
             
               mediaPlayer5.setVolume(value/100);
    
    
    
}else if(electronBass.isEnabled()==false){
    mediaPlayer5.stop();
    
}
}catch(Exception e){
    
}
    }                                         

    private void electronBassMouseClicked(java.awt.event.MouseEvent evt) {                                          



    }                                         

    private void electronBassMouseEntered(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void toggleStateChanged(javax.swing.event.ChangeEvent evt) {                                    



    }                                   

    private void icon_icoMouseClicked(java.awt.event.MouseEvent evt) {                                      
        if(Equalizer.isVisible()==false){
            WelcomeMod(getClass().getResource(SoundMod));

            Equalizer.setVisible(true);
            about.setVisible(false);
            program.setVisible(false);
        }else{
            WelcomeMod(getClass().getResource(SoundMod));

            program.setVisible(true);
            Equalizer.setVisible(false);
            about.setVisible(false);
        }
    }                                     

    private void filechooserMouseClicked(java.awt.event.MouseEvent evt) {                                         
 play_pause_btn.setEnabled(true);
        try{
         
     
         filedClip.close();
         
         }catch(Exception e){
             System.out.println(""+e);
         }
    try{
         
     
         c.close();
         
         }catch(Exception e){
             System.out.println(""+e);
         }
    
        try{
        filechooser();
        }catch(Exception error){
            
        }
        

    }                                        

    private void addlyricsMouseClicked(java.awt.event.MouseEvent evt) {                                       

        WelcomeMod(getClass().getResource(SoundMod));
        try{
               BufferedReader reader;
                JFileChooser chooser=new JFileChooser();
                FileNameExtensionFilter filter=new FileNameExtensionFilter(".TXT Only", "txt");
                chooser.setFileFilter(filter);
                int returnVal=chooser.showOpenDialog(this);
                if(returnVal==JFileChooser.APPROVE_OPTION){
        
                 String file=chooser.getCurrentDirectory()+"/"+chooser.getSelectedFile().getName();
                 reader=new BufferedReader(new FileReader(new File(file)));
                 String readme=reader.readLine()+"\n";
                 while(reader.ready()){
                     readme+=reader.readLine()+"\n";
                 }
                 
          TextArea=new JTextArea(readme);
            JFrame frame=new JFrame();    
            frame.setVisible(true);
            TextArea.setEditable(false);
            TextArea.setAutoscrolls(true);
            TextArea.setFont(new Font("new", Font.BOLD, 30));
           Font f;
 JScrollPane scroll = new JScrollPane ( TextArea );
    scroll.setVerticalScrollBarPolicy ( ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS );
frame.add(scroll);
            frame.pack();
            
            frame.setSize(1200, 700);
            frame.setLocationRelativeTo(null);
            frame.setTitle("Lyrics");
            frame.setIconImage(image44.getImage());
            frame.setCursor(Cursor.HAND_CURSOR);
         frame.setResizable(false);
         
                }   }catch(Exception e){
            
        }
              
                 
            



    }                                      

    private void twitterMouseClicked(java.awt.event.MouseEvent evt) {                                     

try{
                        WelcomeMod(getClass().getResource(SoundMod));

    getDesktop().browse(new URI("https://twitter.com/g_pavl"));
}catch(Exception error){
    
}




    }                                    

    private void openSocialsMouseClicked(java.awt.event.MouseEvent evt) {                                         
        WelcomeMod(getClass().getResource(SoundMod));
    ImageIcon up=new ImageIcon(getClass().getResource("/files/Icons/Button-Green-Arrow-Up-icon.png"));
ImageIcon down=new ImageIcon(getClass().getResource("/files/Icons/Button-Green-Arrow-Down-icon.png"));
if(facebook.isVisible()==false){
    openSocials.setIcon(down);
    facebook.setVisible(true);
    googleplus.setVisible(true);
    twitter.setVisible(true);
    GitHub.setVisible(true);
}else{
    openSocials.setIcon(up);
      facebook.setVisible(false);
    googleplus.setVisible(false);
    twitter.setVisible(false);
        GitHub.setVisible(false);

}




    }                                        

    private void jLabel24KeyPressed(java.awt.event.KeyEvent evt) {                                    
try{
        switch(evt.getKeyCode()){
    case KeyEvent.VK_5:
        JOptionPane.showMessageDialog(null, "hi");
           if(c.isRunning()){
               c.stop();
           }
           if(c.isRunning()==false){
               clip.start();
           }
}
}catch(Exception error){
    
}



    }                                   

    private void programKeyPressed(java.awt.event.KeyEvent evt) {                                   

try{
    if(evt.KEY_PRESSED==KeyEvent.VK_5){
     JOptionPane.showMessageDialog(rootPane, "hiss");
    }
        switch(evt.getKeyCode()){
    case KeyEvent.VK_F5:
           if(c.isRunning()){
               c.stop();
           }
           if(c.isRunning()==false){
               c.start();
           }
           break;
}
}catch(Exception error){
    
}

    }                                  

    private void jLabel25KeyPressed(java.awt.event.KeyEvent evt) {                                    
        // TODO add your handling code here:
    }                                   

    private void GitHubMouseClicked(java.awt.event.MouseEvent evt) {                                    

try{
                        WelcomeMod(getClass().getResource(SoundMod));

    getDesktop().browse(new URI("https://github.com/the-scrappers"));
}catch(Exception error){
    
}





    }                                   
public void filechooser(){
    
            try{
               
                JFileChooser chooser=new JFileChooser();
                FileNameExtensionFilter filter=new FileNameExtensionFilter(".WAV only", "wav");
                chooser.setFileFilter(filter);
                int returnVal=chooser.showOpenDialog(this);
                if(returnVal==JFileChooser.APPROVE_OPTION){
        
                 String file=chooser.getCurrentDirectory()+"/"+chooser.getSelectedFile().getName();
                    
        filedClip=AudioSystem.getClip();
        musicTitle_txtField.setText(chooser.getSelectedFile().getName());
         stream=AudioSystem.getAudioInputStream(new File(file));
       
           filedClip.open(stream);
          
           filedClip.start(); 
     
                }
       }catch(Exception error){
           c.stop();
           c.close();
           c.start();
       }
        
        
        
}
    MediaPlayer mediaPlayer1;
        MediaPlayer mediaPlayer2;

            MediaPlayer mediaPlayer3;
                        MediaPlayer mediaPlayer4;
            MediaPlayer mediaPlayer5;


    public void EqualizerBass1(String musicFile){
        try{
            new javafx.embed.swing.JFXPanel();
             
        Media sound = new Media(new File(musicFile).toURI().toString());
 mediaPlayer1 = new MediaPlayer(sound);
mediaPlayer1.play();
 mediaPlayer1.setOnEndOfMedia(new Runnable() {
        @Override
        public void run() {
            mediaPlayer1.seek(Duration.ZERO);
        }
    }); 

        }catch(Exception error){
        }
    }
     public void EqualizerBass2(String musicFile){
        try{
            new javafx.embed.swing.JFXPanel();
        Media sound = new Media(new File(musicFile).toURI().toString());
 mediaPlayer2 = new MediaPlayer(sound);
mediaPlayer2.play();
 mediaPlayer2.setOnEndOfMedia(new Runnable() {
        @Override
        public void run() {
            mediaPlayer2.seek(Duration.ZERO);
        }
    });   

        }catch(Exception error){
        }
    }
      public void EqualizerBass3(String musicFile){
        try{
            new javafx.embed.swing.JFXPanel();
        Media sound = new Media(new File(musicFile).toURI().toString());
 mediaPlayer3 = new MediaPlayer(sound);
mediaPlayer3.play();
 mediaPlayer3.setOnEndOfMedia(new Runnable() {
        @Override
        public void run() {
            mediaPlayer3.seek(Duration.ZERO);
        }
    });   

        }catch(Exception error){
        }
    }
       public void EqualizerBass4(String musicFile){
        try{
            new javafx.embed.swing.JFXPanel();
        Media sound = new Media(new File(musicFile).toURI().toString());
 mediaPlayer4 = new MediaPlayer(sound);
mediaPlayer4.play();
 mediaPlayer4.setOnEndOfMedia(new Runnable() {
        @Override
        public void run() {
            mediaPlayer4.seek(Duration.ZERO);
        }
    });  

        }catch(Exception error){
        }
    }
        public void EqualizerBass5(String musicFile){
        try{
            new javafx.embed.swing.JFXPanel();
        Media sound = new Media(new File(musicFile).toURI().toString());
 mediaPlayer5 = new MediaPlayer(sound);
mediaPlayer5.play();
mediaPlayer5.setOnEndOfMedia(new Runnable() {
        @Override
        public void run() {
            mediaPlayer5.seek(Duration.ZERO);
        }
    });   

        }catch(Exception error){
        }
    }
    
    
    
    
   public void  Source_Code(URL url){
        try{
       BufferedReader br;
       
            br=new BufferedReader(new InputStreamReader(url.openStream()));

           
           String text2=br.readLine()+"\n";
            while(br.ready()==true){
             
            text2+=br.readLine()+"\n";
           
                 
            }
          TextArea=new JTextArea(text2);
           musicTitle_txtField.setText(text);         
            JFrame frame=new JFrame();    
            frame.setVisible(true);
            TextArea.setEditable(false);
            TextArea.setAutoscrolls(true);
            TextArea.setFont(new Font("new", Font.BOLD, 15));
           Font f;
 JScrollPane scroll = new JScrollPane ( TextArea );
    scroll.setVerticalScrollBarPolicy ( ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS );
frame.add(scroll);
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setTitle("Source Code(JAVA SE)");
            ImageIcon codeico=new ImageIcon(getClass().getResource("/files/Icons/source.png"));
            frame.setIconImage(codeico.getImage());
            frame.setCursor(Cursor.HAND_CURSOR);
         frame.setResizable(true);
         
        }catch(Exception e){
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
       try{
                
           UIManager.setLookAndFeel( "com.jtattoo.plaf.smart.SmartLookAndFeel" );
       }catch(Exception error){
        JOptionPane.showMessageDialog(null, error);
        error.printStackTrace();
       }

     /* 
       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    
      /* Create and display the form */
     
java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            
                new Music_Player().setVisible(true);
            }
        });
    }
    
    
    AudioInputStream stream;
      public void Clipper(String file2){
          
           try{
           File url=new File(file2);
        c=AudioSystem.getClip();
        
         stream=AudioSystem.getAudioInputStream(url);
          c.open(stream);
          
           c.start(); 
     
         
       }catch(Exception error){
           c.stop();
           c.close();
           c.start();
       }
           try{
            BufferedReader br;
        
       
            br=new BufferedReader(new FileReader("/home/twisted/BTJD Music Player Files/Lyrics/music"+Increment+".txt"));

           text=br.readLine()+"\n";
           String text2=text+br.readLine()+"\n";

     
 
 musicTitle_txtField.setText(text);
           }catch(Exception e){
               
           }
      }
    
    
    
    public void WelcomeMod(URL file){
        
           try{
               
        clip=AudioSystem.getClip();
        
           AudioInputStream stream=AudioSystem.getAudioInputStream(file);
          clip.open(stream);
           clip.start();
         
       }catch(Exception error){
           
       }}


  
    public void DefaultConfiguration(){
              shuffle_btn.setEnabled(true);
        next_btn.setEnabled(true);
    }
    public void comboboxList(){
          for(int Increment2=1;Increment2<=9000;++Increment2){
       String index="music"+Increment2;
        list_combobox.addItem(index);
        }
    }
static  String text,text2;

static JTextArea TextArea;

  public void readme(String file){
        BufferedReader br;
        try{
       
            br=new BufferedReader(new FileReader("C:\\BTJD Music Player\\Lyrics\\music"+Increment+".txt"));

           text=br.readLine()+"\n";
           String text2=text+br.readLine()+"\n";
            while(br.ready()==true){
             
            text2+=br.readLine()+"\n";
           
               
        }}catch(Exception e){
                   
                   }
            } 
                
public void Readit(){
    try{
       BufferedReader br;
        
       
            br=new BufferedReader(new FileReader("/home/twisted/BTJD Music Player Files/Lyrics/music"+Increment+".txt"));

           text=br.readLine()+"\n";
           
           String text2=text+br.readLine()+"\n";
            while(br.ready()==true){
             
            text2+=br.readLine()+"\n";
           
                 
            }
          TextArea=new JTextArea(text2);
           musicTitle_txtField.setText(text);         
            JFrame frame=new JFrame();    
            frame.setVisible(true);
            TextArea.setEditable(false);
            TextArea.setAutoscrolls(true);
            TextArea.setFont(new Font("new", Font.BOLD, 30));
           Font f;
 JScrollPane scroll = new JScrollPane ( TextArea );
    scroll.setVerticalScrollBarPolicy ( ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS );
frame.add(scroll);
            frame.pack();
            
            frame.setSize(1200, 700);
            frame.setLocationRelativeTo(null);
            frame.setTitle("Lyrics");
            frame.setIconImage(image44.getImage());
            frame.setCursor(Cursor.HAND_CURSOR);
         frame.setResizable(false);
         
        }catch(Exception e){
            
        }
}


    // Variables declaration - do not modify                     
    private javax.swing.JSlider AerialBass;
    private javax.swing.JTextArea BetaTeam_Members;
    private javax.swing.JPanel Equalizer;
    private javax.swing.JLabel GitHub;
    private javax.swing.JLabel TeamLogo;
    private javax.swing.JPanel about;
    private javax.swing.JButton about_btn;
    private javax.swing.JLabel addlyrics;
    private javax.swing.JLabel back;
    private javax.swing.JLabel background4;
    private javax.swing.JSlider bassBoosted;
    private javax.swing.JSlider deepBass;
    private javax.swing.JSlider electronBass;
    private javax.swing.JSlider extremeBass;
    private javax.swing.JLabel facebook;
    private javax.swing.JButton fastBackward_btn;
    private javax.swing.JButton fastForward_btn;
    private javax.swing.JLabel filechooser;
    private javax.swing.JLabel googleplus;
    private javax.swing.JLabel icon_ico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> list_combobox;
    private javax.swing.JButton lyrics_btn;
    private javax.swing.JTextField musicTitle_txtField;
    private javax.swing.JButton next_btn;
    private javax.swing.JLabel openSocials;
    private javax.swing.JButton play_pause_btn;
    private javax.swing.JButton previous_btn;
    private javax.swing.JPanel program;
    private javax.swing.JButton repeat_btn;
    private javax.swing.JButton shuffle_btn;
    private javax.swing.JButton source_code;
    private javax.swing.JSlider toggle;
    private javax.swing.JLabel twitter;
    private javax.swing.JLabel version_txtview;
    // End of variables declaration                   

}





